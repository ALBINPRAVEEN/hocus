/* tslint:disable */
/* eslint-disable */
/**
 * Firecracker API
 * RESTful public-facing API. The API is accessible through HTTP calls on specific URLs carrying JSON modeled data. The transport medium is a Unix Domain Socket.
 *
 * The version of the OpenAPI document: 1.1.2
 * Contact: compute-capsule@amazon.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MemoryBackend
 */
export interface MemoryBackend {
    /**
     * 
     * @type {string}
     * @memberof MemoryBackend
     */
    backendType: MemoryBackendBackendTypeEnum;
    /**
     * Based on 'backend_type' it is either 1) Path to the file that contains the guest memory to be loaded 2) Path to the UDS where a process is listening for a UFFD initialization control payload and open file descriptor that it can use to serve this process's guest memory page faults
     * @type {string}
     * @memberof MemoryBackend
     */
    backendPath: string;
}


/**
 * @export
 */
export const MemoryBackendBackendTypeEnum = {
    File: 'File',
    Uffd: 'Uffd'
} as const;
export type MemoryBackendBackendTypeEnum = typeof MemoryBackendBackendTypeEnum[keyof typeof MemoryBackendBackendTypeEnum];


/**
 * Check if a given object implements the MemoryBackend interface.
 */
export function instanceOfMemoryBackend(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "backendType" in value;
    isInstance = isInstance && "backendPath" in value;

    return isInstance;
}

export function MemoryBackendFromJSON(json: any): MemoryBackend {
    return MemoryBackendFromJSONTyped(json, false);
}

export function MemoryBackendFromJSONTyped(json: any, ignoreDiscriminator: boolean): MemoryBackend {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'backendType': json['backend_type'],
        'backendPath': json['backend_path'],
    };
}

export function MemoryBackendToJSON(value?: MemoryBackend | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'backend_type': value.backendType,
        'backend_path': value.backendPath,
    };
}

