/* tslint:disable */
/* eslint-disable */
/**
 * Firecracker API
 * RESTful public-facing API. The API is accessible through HTTP calls on specific URLs carrying JSON modeled data. The transport medium is a Unix Domain Socket.
 *
 * The version of the OpenAPI document: 1.1.2
 * Contact: compute-capsule@amazon.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Defines the microVM running state. It is especially useful in the snapshotting context.
 * @export
 * @interface Vm
 */
export interface Vm {
    /**
     * 
     * @type {string}
     * @memberof Vm
     */
    state: VmStateEnum;
}


/**
 * @export
 */
export const VmStateEnum = {
    Paused: 'Paused',
    Resumed: 'Resumed'
} as const;
export type VmStateEnum = typeof VmStateEnum[keyof typeof VmStateEnum];


/**
 * Check if a given object implements the Vm interface.
 */
export function instanceOfVm(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "state" in value;

    return isInstance;
}

export function VmFromJSON(json: any): Vm {
    return VmFromJSONTyped(json, false);
}

export function VmFromJSONTyped(json: any, ignoreDiscriminator: boolean): Vm {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'state': json['state'],
    };
}

export function VmToJSON(value?: Vm | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'state': value.state,
    };
}

