/* tslint:disable */
/* eslint-disable */
/**
 * Firecracker API
 * RESTful public-facing API. The API is accessible through HTTP calls on specific URLs carrying JSON modeled data. The transport medium is a Unix Domain Socket.
 *
 * The version of the OpenAPI document: 1.1.2
 * Contact: compute-capsule@amazon.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Boot source descriptor.
 * @export
 * @interface BootSource
 */
export interface BootSource {
    /**
     * Kernel boot arguments
     * @type {string}
     * @memberof BootSource
     */
    bootArgs?: string;
    /**
     * Host level path to the initrd image used to boot the guest
     * @type {string}
     * @memberof BootSource
     */
    initrdPath?: string;
    /**
     * Host level path to the kernel image used to boot the guest
     * @type {string}
     * @memberof BootSource
     */
    kernelImagePath: string;
}

/**
 * Check if a given object implements the BootSource interface.
 */
export function instanceOfBootSource(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "kernelImagePath" in value;

    return isInstance;
}

export function BootSourceFromJSON(json: any): BootSource {
    return BootSourceFromJSONTyped(json, false);
}

export function BootSourceFromJSONTyped(json: any, ignoreDiscriminator: boolean): BootSource {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'bootArgs': !exists(json, 'boot_args') ? undefined : json['boot_args'],
        'initrdPath': !exists(json, 'initrd_path') ? undefined : json['initrd_path'],
        'kernelImagePath': json['kernel_image_path'],
    };
}

export function BootSourceToJSON(value?: BootSource | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'boot_args': value.bootArgs,
        'initrd_path': value.initrdPath,
        'kernel_image_path': value.kernelImagePath,
    };
}

