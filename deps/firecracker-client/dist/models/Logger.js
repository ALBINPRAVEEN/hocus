"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Firecracker API
 * RESTful public-facing API. The API is accessible through HTTP calls on specific URLs carrying JSON modeled data. The transport medium is a Unix Domain Socket.
 *
 * The version of the OpenAPI document: 1.1.2
 * Contact: compute-capsule@amazon.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.LoggerToJSON = exports.LoggerFromJSONTyped = exports.LoggerFromJSON = exports.instanceOfLogger = exports.LoggerLevelEnum = void 0;
const runtime_1 = require("../runtime");
/**
 * @export
 */
exports.LoggerLevelEnum = {
    Error: 'Error',
    Warning: 'Warning',
    Info: 'Info',
    Debug: 'Debug'
};
/**
 * Check if a given object implements the Logger interface.
 */
function instanceOfLogger(value) {
    let isInstance = true;
    isInstance = isInstance && "logPath" in value;
    return isInstance;
}
exports.instanceOfLogger = instanceOfLogger;
function LoggerFromJSON(json) {
    return LoggerFromJSONTyped(json, false);
}
exports.LoggerFromJSON = LoggerFromJSON;
function LoggerFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'level': !(0, runtime_1.exists)(json, 'level') ? undefined : json['level'],
        'logPath': json['log_path'],
        'showLevel': !(0, runtime_1.exists)(json, 'show_level') ? undefined : json['show_level'],
        'showLogOrigin': !(0, runtime_1.exists)(json, 'show_log_origin') ? undefined : json['show_log_origin'],
    };
}
exports.LoggerFromJSONTyped = LoggerFromJSONTyped;
function LoggerToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'level': value.level,
        'log_path': value.logPath,
        'show_level': value.showLevel,
        'show_log_origin': value.showLogOrigin,
    };
}
exports.LoggerToJSON = LoggerToJSON;
