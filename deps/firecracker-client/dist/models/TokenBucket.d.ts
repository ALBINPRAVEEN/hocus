/**
 * Firecracker API
 * RESTful public-facing API. The API is accessible through HTTP calls on specific URLs carrying JSON modeled data. The transport medium is a Unix Domain Socket.
 *
 * The version of the OpenAPI document: 1.1.2
 * Contact: compute-capsule@amazon.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Defines a token bucket with a maximum capacity (size), an initial burst size (one_time_burst) and an interval for refilling purposes (refill_time). The refill-rate is derived from size and refill_time, and it is the constant rate at which the tokens replenish. The refill process only starts happening after the initial burst budget is consumed. Consumption from the token bucket is unbounded in speed which allows for bursts bound in size by the amount of tokens available. Once the token bucket is empty, consumption speed is bound by the refill_rate.
 * @export
 * @interface TokenBucket
 */
export interface TokenBucket {
    /**
     * The initial size of a token bucket.
     * @type {number}
     * @memberof TokenBucket
     */
    oneTimeBurst?: number;
    /**
     * The amount of milliseconds it takes for the bucket to refill.
     * @type {number}
     * @memberof TokenBucket
     */
    refillTime: number;
    /**
     * The total number of tokens this bucket can hold.
     * @type {number}
     * @memberof TokenBucket
     */
    size: number;
}
/**
 * Check if a given object implements the TokenBucket interface.
 */
export declare function instanceOfTokenBucket(value: object): boolean;
export declare function TokenBucketFromJSON(json: any): TokenBucket;
export declare function TokenBucketFromJSONTyped(json: any, ignoreDiscriminator: boolean): TokenBucket;
export declare function TokenBucketToJSON(value?: TokenBucket | null): any;
