"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Firecracker API
 * RESTful public-facing API. The API is accessible through HTTP calls on specific URLs carrying JSON modeled data. The transport medium is a Unix Domain Socket.
 *
 * The version of the OpenAPI document: 1.1.2
 * Contact: compute-capsule@amazon.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MmdsConfigToJSON = exports.MmdsConfigFromJSONTyped = exports.MmdsConfigFromJSON = exports.instanceOfMmdsConfig = exports.MmdsConfigVersionEnum = void 0;
const runtime_1 = require("../runtime");
/**
 * @export
 */
exports.MmdsConfigVersionEnum = {
    V1: 'V1',
    V2: 'V2'
};
/**
 * Check if a given object implements the MmdsConfig interface.
 */
function instanceOfMmdsConfig(value) {
    let isInstance = true;
    isInstance = isInstance && "networkInterfaces" in value;
    return isInstance;
}
exports.instanceOfMmdsConfig = instanceOfMmdsConfig;
function MmdsConfigFromJSON(json) {
    return MmdsConfigFromJSONTyped(json, false);
}
exports.MmdsConfigFromJSON = MmdsConfigFromJSON;
function MmdsConfigFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'version': !(0, runtime_1.exists)(json, 'version') ? undefined : json['version'],
        'networkInterfaces': json['network_interfaces'],
        'ipv4Address': !(0, runtime_1.exists)(json, 'ipv4_address') ? undefined : json['ipv4_address'],
    };
}
exports.MmdsConfigFromJSONTyped = MmdsConfigFromJSONTyped;
function MmdsConfigToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'version': value.version,
        'network_interfaces': value.networkInterfaces,
        'ipv4_address': value.ipv4Address,
    };
}
exports.MmdsConfigToJSON = MmdsConfigToJSON;
