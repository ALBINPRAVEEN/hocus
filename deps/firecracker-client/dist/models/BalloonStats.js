"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Firecracker API
 * RESTful public-facing API. The API is accessible through HTTP calls on specific URLs carrying JSON modeled data. The transport medium is a Unix Domain Socket.
 *
 * The version of the OpenAPI document: 1.1.2
 * Contact: compute-capsule@amazon.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.BalloonStatsToJSON = exports.BalloonStatsFromJSONTyped = exports.BalloonStatsFromJSON = exports.instanceOfBalloonStats = void 0;
const runtime_1 = require("../runtime");
/**
 * Check if a given object implements the BalloonStats interface.
 */
function instanceOfBalloonStats(value) {
    let isInstance = true;
    isInstance = isInstance && "targetPages" in value;
    isInstance = isInstance && "actualPages" in value;
    isInstance = isInstance && "targetMib" in value;
    isInstance = isInstance && "actualMib" in value;
    return isInstance;
}
exports.instanceOfBalloonStats = instanceOfBalloonStats;
function BalloonStatsFromJSON(json) {
    return BalloonStatsFromJSONTyped(json, false);
}
exports.BalloonStatsFromJSON = BalloonStatsFromJSON;
function BalloonStatsFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'targetPages': json['target_pages'],
        'actualPages': json['actual_pages'],
        'targetMib': json['target_mib'],
        'actualMib': json['actual_mib'],
        'swapIn': !(0, runtime_1.exists)(json, 'swap_in') ? undefined : json['swap_in'],
        'swapOut': !(0, runtime_1.exists)(json, 'swap_out') ? undefined : json['swap_out'],
        'majorFaults': !(0, runtime_1.exists)(json, 'major_faults') ? undefined : json['major_faults'],
        'minorFaults': !(0, runtime_1.exists)(json, 'minor_faults') ? undefined : json['minor_faults'],
        'freeMemory': !(0, runtime_1.exists)(json, 'free_memory') ? undefined : json['free_memory'],
        'totalMemory': !(0, runtime_1.exists)(json, 'total_memory') ? undefined : json['total_memory'],
        'availableMemory': !(0, runtime_1.exists)(json, 'available_memory') ? undefined : json['available_memory'],
        'diskCaches': !(0, runtime_1.exists)(json, 'disk_caches') ? undefined : json['disk_caches'],
        'hugetlbAllocations': !(0, runtime_1.exists)(json, 'hugetlb_allocations') ? undefined : json['hugetlb_allocations'],
        'hugetlbFailures': !(0, runtime_1.exists)(json, 'hugetlb_failures') ? undefined : json['hugetlb_failures'],
    };
}
exports.BalloonStatsFromJSONTyped = BalloonStatsFromJSONTyped;
function BalloonStatsToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'target_pages': value.targetPages,
        'actual_pages': value.actualPages,
        'target_mib': value.targetMib,
        'actual_mib': value.actualMib,
        'swap_in': value.swapIn,
        'swap_out': value.swapOut,
        'major_faults': value.majorFaults,
        'minor_faults': value.minorFaults,
        'free_memory': value.freeMemory,
        'total_memory': value.totalMemory,
        'available_memory': value.availableMemory,
        'disk_caches': value.diskCaches,
        'hugetlb_allocations': value.hugetlbAllocations,
        'hugetlb_failures': value.hugetlbFailures,
    };
}
exports.BalloonStatsToJSON = BalloonStatsToJSON;
